openapi: 3.0.0
info:
  title: Product Management API
  description: API cho việc quản lý sản phẩm, bao gồm tạo sản phẩm, tìm kiếm sản phẩm, lấy tất cả sản phẩm và cập nhật sản phẩm với JWT authentication.
  version: 1.0.0

servers:
  - url: https://api.example.com/v1
    description: API server

tags:
  - name: Product
    description: Các API liên quan đến sản phẩm

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: Invalid JWT token

paths:
  /product:
    post:
      tags:
        - Product
      summary: Tạo sản phẩm mới
      description: Tạo sản phẩm mới và upload nhiều ảnh cho sản phẩm
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                product_name:
                  type: string
                  description: Tên sản phẩm
                  example: Áo thun
                product_desc:
                  type: string
                  description: Mô tả sản phẩm
                  example: Áo thun chất liệu cotton
                product_price:
                  type: number
                  description: Giá sản phẩm
                  example: 150000
                product_quantity:
                  type: number
                  description: Số lượng sản phẩm
                  example: 100
                category_id:
                  type: string
                  description: ID danh mục sản phẩm
                  example: 60f731a1b540ef001f5d73d9
                files:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Hình ảnh sản phẩm (cho phép upload nhiều file)
      responses:
        "201":
          description: Tạo sản phẩm thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Product created successfully
                  data:
                    type: object
                    properties:
                      product_id:
                        type: string
                        example: 64ff4c5d7fbe3e1f5fdc8bcd
                      product_name:
                        type: string
                        example: Áo thun
                      product_img:
                        type: array
                        items:
                          type: string
                        example:
                          - https://res.cloudinary.com/.../image1.jpg
                          - https://res.cloudinary.com/.../image2.jpg
        "401":
          description: Unauthorized - JWT token không hợp lệ hoặc thiếu
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "400":
          description: Bad request - Lỗi khi tạo sản phẩm
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    get:
      tags:
        - Product
      summary: Lấy tất cả sản phẩm
      description: Lấy danh sách tất cả sản phẩm
      responses:
        "200":
          description: Danh sách sản phẩm
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    product_id:
                      type: string
                      example: 64ff4c5d7fbe3e1f5fdc8bcd
                    product_name:
                      type: string
                      example: Áo thun
        "401":
          description: Unauthorized - JWT token không hợp lệ hoặc thiếu
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    delete:
      tags:
        - Product
      summary: Xóa nhiều sản phẩm
      description: Chuyển nhiều sản phẩm vào trạng thái xóa (không xóa vĩnh viễn)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  items:
                    type: string
                  example: ["id1", "id2", "id3"]
      responses:
        "200":
          description: Các sản phẩm đã được chuyển sang trạng thái xóa
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Products deleted successfully
        "401":
          description: Unauthorized - JWT token không hợp lệ hoặc thiếu
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Một hoặc nhiều sản phẩm không tồn tại
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /product/{id}:
    get:
      tags:
        - Product
      summary: Lấy thông tin sản phẩm theo ID
      description: Lấy thông tin chi tiết của sản phẩm dựa trên ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID sản phẩm
      responses:
        "200":
          description: Thông tin sản phẩm
          content:
            application/json:
              schema:
                type: object
                properties:
                  product_id:
                    type: string
                    example: 64ff4c5d7fbe3e1f5fdc8bcd
                  product_name:
                    type: string
                    example: Áo thun
                  product_img:
                    type: array
                    items:
                      type: string
                    example:
                      - https://res.cloudinary.com/.../image1.jpg
                      - https://res.cloudinary.com/.../image2.jpg
                  product_price:
                    type: number
                    example: 150000
                  product_quantity:
                    type: number
                    example: 100
        "401":
          description: Unauthorized - JWT token không hợp lệ hoặc thiếu
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Sản phẩm không tồn tại
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    put:
      tags:
        - Product
      summary: Cập nhật thông tin sản phẩm theo ID
      description: Cập nhật thông tin chi tiết của sản phẩm dựa trên ID. Các trường bắt buộc phải có được đánh dấu.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID sản phẩm
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                product_name:
                  type: string
                  description: Tên sản phẩm (bắt buộc)
                  example: Áo thun
                product_desc:
                  type: string
                  description: Mô tả sản phẩm
                  example: Áo thun chất liệu cotton
                product_price:
                  type: number
                  description: Giá sản phẩm (bắt buộc)
                  example: 150000
                product_quantity:
                  type: number
                  description: Số lượng sản phẩm (bắt buộc)
                  example: 100
                category_id:
                  type: string
                  description: ID danh mục sản phẩm (bắt buộc)
                  example: 60f731a1b540ef001f5d73d9
                product_img:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Hình ảnh sản phẩm (có thể upload nhiều file)
      responses:
        "200":
          description: Cập nhật sản phẩm thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Product updated successfully
        "401":
          description: Unauthorized - JWT token không hợp lệ hoặc thiếu
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Sản phẩm không tồn tại
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /product/publish:
    post:
      tags:
        - Product
      summary: Đưa nhiều sản phẩm về trạng thái công khai
      description: Đưa nhiều sản phẩm vào trạng thái công khai để hiển thị trên trang web
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  items:
                    type: string
                  example: ["id1", "id2", "id3"]
      responses:
        "200":
          description: Các sản phẩm đã được đưa vào trạng thái công khai
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Products published successfully
        "401":
          description: Unauthorized - JWT token không hợp lệ hoặc thiếu
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Một hoặc nhiều sản phẩm không tồn tại
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /product/draft:
    post:
      tags:
        - Product
      summary: Đưa nhiều sản phẩm về trạng thái riêng tư
      description: Đưa nhiều sản phẩm vào trạng thái riêng tư để không hiển thị trên trang web
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  items:
                    type: string
                  example: ["id1", "id2", "id3"]
      responses:
        "200":
          description: Các sản phẩm đã được đưa vào trạng thái riêng tư
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Products set to private successfully
        "401":
          description: Unauthorized - JWT token không hợp lệ hoặc thiếu
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Một hoặc nhiều sản phẩm không tồn tại
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /product/shop/{shopId}/catalog/{catalogId}:
    get:
      tags:
        - Product
      summary: Lọc sản phẩm theo shop và catalogShop
      description: Lọc sản phẩm theo shop và catalogShop
      parameters:
        - name: shopId
          in: path
          required: true
          description: ID of the shop
          schema:
            type: string
        - name: catalogId
          in: path
          required: true
          description: ID of the catalog
          schema:
            type: string
      responses:
        "200":
          description: Danh sách sản phẩm

  /product/shop/{shopId}:
    get:
      tags:
        - Product
      summary: Lọc sản phẩm theo shop
      description: Lọc sản phẩm theo shop
      parameters:
        - name: shopId
          in: path
          required: true
          description: ID of the shop
          schema:
            type: string
      responses:
        "200":
          description: Danh sách sản phẩm

  /product/catalog/{catalogId}:
    post:
      tags:
        - "Product"
      summary: "Add products to a specific Catalog Shop"
      description: "Add multiple products to a specific catalog in a shop by passing catalogId and product details."
      operationId: "addProductsToCatalogShop"
      parameters:
        - name: "catalogId"
          in: "path"
          required: true
          description: "ID of the catalog to add products to"
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                catalogName:
                  type: string
                  description: "Name of the catalog"
                catalogDescription:
                  type: string
                  description: "Description of the catalog"
                products:
                  type: array
                  description: "List of products to be added to the catalog"
              example:
                catalogName: "Summer Collection"
                catalogDescription: "A special summer collection for 2024"
                products:
                  - "64bcf9e7abf0450001ed8f8a"
                  - "64bcf9e7abf0450001ed8f8b"
      responses:
        200:
          description: "Products added to catalog successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      catalogId:
                        type: string
                        description: "ID of the catalog"
                      productsAdded:
                        type: array
                        description: "List of products added"
                        items:
                          type: object
                          properties:
                            productId:
                              type: string
                            quantity:
                              type: number
        400:
          description: "Invalid request or products not found"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Catalog or products not found"
      security:
        - bearerAuth: []
  
  /product/category/{categoryId}:
    get:
      tags:
        - "Product"
      summary: "Get products by category"
      description: "Get products by category"
      operationId: "getProductsByCategory"
      parameters:
        - name: "categoryId"
          in: "path"
          required: true
          description: "ID of the category"
          schema:
            type: string
      responses:
        200:
          description: "Products retrieved successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      products:
                        type: array
                        description: "List of products"
                        items:
                          type: object
                          properties:
                            productId:
                              type: string
                            quantity:
                              type: number
        400:
          description: "Invalid request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Category not found"

  /product/search:
    post:
      tags:
        - Product
      summary: Tìm kiếm sản phẩm
      description: API này tìm kiếm các sản phẩm dựa trên từ khóa, danh mục, sắp xếp, phân trang và các tiêu chí khác thông qua `req.query` mặc dù sử dụng phương thức `POST`.
      operationId: searchProducts
      parameters:
        - in: query
          name: searchQuery
          schema:
            type: string
          description: Từ khóa tìm kiếm sản phẩm. Nếu không có sẽ trả về tất cả sản phẩm.
          example: "áo thun"
        - in: query
          name: category
          schema:
            type: string
          description: ID của danh mục sản phẩm. Dùng để lọc sản phẩm theo danh mục.
          example: "66ff884d6c5fdd23b7cb8cfb"
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Số trang hiện tại. Mặc định là 1.
          example: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Số lượng sản phẩm trên mỗi trang. Mặc định là 10.
          example: 10
        - in: query
          name: sortBy
          schema:
            type: string
          description: | 
           Tiêu chí sắp xếp sản phẩm. Các giá trị hợp lệ là:
            - "-createdAt": Sắp xếp theo mới nhất.
            - "sold_count": Sắp xếp theo số lượng bán được nhiều nhất.
            - "price_asc": Sắp xếp theo giá tăng dần.
            - "price_desc": Sắp xếp theo giá giảm dần.
          example: "-createdAt"
      responses:
        '200':
          description: Trả về danh sách sản phẩm theo tiêu chí tìm kiếm
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Search Products"
                  data:
                    type: object
                    properties:
                      productsWithCounts:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                              example: "5f50ca3b6b50a41654baf1e3"
                            name:
                              type: string
                              example: "Áo thun nam"
                            price:
                              type: number
                              example: 200000
                            soldCount:
                              type: integer
                              example: 50
                            ratingCount:
                              type: integer
                              example: 25
                            avgRating:
                              type: number
                              example: 4.5
                            shop_id:
                              type: object
                              properties:
                                shop_id:
                                  type: string
                                  example: "5f50ca3b6b50a41654baf1e2"
                                shop_name:
                                  type: string
                                  example: "Shop Thời Trang ABC"
                            category_id:
                              type: object
                              properties:
                                category_name:
                                  type: string
                                  example: "Áo thun"
                      totalCount:
                        type: integer
                        example: 100
                      totalPages:
                        type: integer
                        example: 10
                      currentPage:
                        type: integer
                        example: 1
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid parameters"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal Server Error"


